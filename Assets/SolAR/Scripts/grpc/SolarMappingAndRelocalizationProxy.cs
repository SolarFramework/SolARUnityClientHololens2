// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: solar_mapping_and_relocalization_proxy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Bcom.Solar.Gprc {

  /// <summary>Holder for reflection information generated from solar_mapping_and_relocalization_proxy.proto</summary>
  public static partial class SolarMappingAndRelocalizationProxyReflection {

    #region Descriptor
    /// <summary>File descriptor for solar_mapping_and_relocalization_proxy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SolarMappingAndRelocalizationProxyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixzb2xhcl9tYXBwaW5nX2FuZF9yZWxvY2FsaXphdGlvbl9wcm94eS5wcm90",
            "bxITY29tLmJjb20uc29sYXIuZ3ByYyIHCgVFbXB0eSIhCgpDbGllbnRVVUlE",
            "EhMKC2NsaWVudF91dWlkGAEgASgJImIKEVBpcGVsaW5lTW9kZVZhbHVlEhMK",
            "C2NsaWVudF91dWlkGAEgASgJEjgKDXBpcGVsaW5lX21vZGUYAiABKA4yIS5j",
            "b20uYmNvbS5zb2xhci5ncHJjLlBpcGVsaW5lTW9kZSIvCgdNZXNzYWdlEhMK",
            "C2NsaWVudF91dWlkGAEgASgJEg8KB21lc3NhZ2UYAiABKAkihQIKEENhbWVy",
            "YVBhcmFtZXRlcnMSEwoLY2xpZW50X3V1aWQYASABKAkSDAoEbmFtZRgCIAEo",
            "CRIKCgJpZBgDIAEoDRI0CgtjYW1lcmFfdHlwZRgEIAEoDjIfLmNvbS5iY29t",
            "LnNvbGFyLmdwcmMuQ2FtZXJhVHlwZRINCgV3aWR0aBgFIAEoDRIOCgZoZWln",
            "aHQYBiABKA0SMgoKaW50cmluc2ljcxgHIAEoCzIeLmNvbS5iY29tLnNvbGFy",
            "LmdwcmMuTWF0cml4M3gzEjkKCmRpc3RvcnRpb24YCCABKAsyJS5jb20uYmNv",
            "bS5zb2xhci5ncHJjLkNhbWVyYURpc3RvcnRpb24i9wMKFkNhbWVyYVBhcmFt",
            "ZXRlcnNTdGVyZW8SEwoLY2xpZW50X3V1aWQYASABKAkSDQoFbmFtZTEYAiAB",
            "KAkSCwoDaWQxGAMgASgNEjUKDGNhbWVyYV90eXBlMRgEIAEoDjIfLmNvbS5i",
            "Y29tLnNvbGFyLmdwcmMuQ2FtZXJhVHlwZRIOCgZ3aWR0aDEYBSABKA0SDwoH",
            "aGVpZ2h0MRgGIAEoDRIzCgtpbnRyaW5zaWNzMRgHIAEoCzIeLmNvbS5iY29t",
            "LnNvbGFyLmdwcmMuTWF0cml4M3gzEjoKC2Rpc3RvcnRpb24xGAggASgLMiUu",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5DYW1lcmFEaXN0b3J0aW9uEg0KBW5hbWUy",
            "GAkgASgJEgsKA2lkMhgKIAEoDRI1CgxjYW1lcmFfdHlwZTIYCyABKA4yHy5j",
            "b20uYmNvbS5zb2xhci5ncHJjLkNhbWVyYVR5cGUSDgoGd2lkdGgyGAwgASgN",
            "Eg8KB2hlaWdodDIYDSABKA0SMwoLaW50cmluc2ljczIYDiABKAsyHi5jb20u",
            "YmNvbS5zb2xhci5ncHJjLk1hdHJpeDN4MxI6CgtkaXN0b3J0aW9uMhgPIAEo",
            "CzIlLmNvbS5iY29tLnNvbGFyLmdwcmMuQ2FtZXJhRGlzdG9ydGlvbiJTChBD",
            "YW1lcmFEaXN0b3J0aW9uEgsKA0tfMRgBIAEoAhILCgNLXzIYAiABKAISCwoD",
            "UF8xGAMgASgCEgsKA1BfMhgEIAEoAhILCgNLXzMYBSABKAIisgMKF1JlY3Rp",
            "ZmljYXRpb25QYXJhbWV0ZXJzEhMKC2NsaWVudF91dWlkGAEgASgJEjUKDWNh",
            "bTFfcm90YXRpb24YAiABKAsyHi5jb20uYmNvbS5zb2xhci5ncHJjLk1hdHJp",
            "eDN4MxI3Cg9jYW0xX3Byb2plY3Rpb24YAyABKAsyHi5jb20uYmNvbS5zb2xh",
            "ci5ncHJjLk1hdHJpeDN4NBI5ChBjYW0xX3N0ZXJlb190eXBlGAQgASgOMh8u",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5TdGVyZW9UeXBlEhUKDWNhbTFfYmFzZWxp",
            "bmUYBSABKAISNQoNY2FtMl9yb3RhdGlvbhgGIAEoCzIeLmNvbS5iY29tLnNv",
            "bGFyLmdwcmMuTWF0cml4M3gzEjcKD2NhbTJfcHJvamVjdGlvbhgHIAEoCzIe",
            "LmNvbS5iY29tLnNvbGFyLmdwcmMuTWF0cml4M3g0EjkKEGNhbTJfc3RlcmVv",
            "X3R5cGUYCCABKA4yHy5jb20uYmNvbS5zb2xhci5ncHJjLlN0ZXJlb1R5cGUS",
            "FQoNY2FtMl9iYXNlbGluZRgJIAEoAiLYAQoUUmVsb2NhbGl6YXRpb25SZXN1",
            "bHQSQgoLcG9zZV9zdGF0dXMYASABKA4yLS5jb20uYmNvbS5zb2xhci5ncHJj",
            "LlJlbG9jYWxpemF0aW9uUG9zZVN0YXR1cxIsCgRwb3NlGAIgASgLMh4uY29t",
            "LmJjb20uc29sYXIuZ3ByYy5NYXRyaXg0eDQSEgoKY29uZmlkZW5jZRgDIAEo",
            "AhI6Cg5tYXBwaW5nX3N0YXR1cxgEIAEoDjIiLmNvbS5iY29tLnNvbGFyLmdw",
            "cmMuTWFwcGluZ1N0YXR1cyKnAQoFSW1hZ2USDQoFd2lkdGgYASABKA0SDgoG",
            "aGVpZ2h0GAIgASgNEgwKBGRhdGEYAyABKAwSMAoGbGF5b3V0GAQgASgOMiAu",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5JbWFnZUxheW91dBI/ChBpbWFnZUNvbXBy",
            "ZXNzaW9uGAUgASgOMiUuY29tLmJjb20uc29sYXIuZ3ByYy5JbWFnZUNvbXBy",
            "ZXNzaW9uIkkKBkZyYW1lcxITCgtjbGllbnRfdXVpZBgBIAEoCRIqCgZmcmFt",
            "ZXMYAiADKAsyGi5jb20uYmNvbS5zb2xhci5ncHJjLkZyYW1lIqEBChFHcm91",
            "bmRUcnV0aEZyYW1lcxITCgtjbGllbnRfdXVpZBgBIAEoCRIrCgZmcmFtZXMY",
            "AiABKAsyGy5jb20uYmNvbS5zb2xhci5ncHJjLkZyYW1lcxI2Cg53b3JsZF90",
            "cmFuc29ybRgDIAEoCzIeLmNvbS5iY29tLnNvbGFyLmdwcmMuTWF0cml4NHg0",
            "EhIKCmZpeGVkX3Bvc2UYBCABKAgihgEKBUZyYW1lEhEKCXNlbnNvcl9pZBgB",
            "IAEoBRIpCgVpbWFnZRgCIAEoCzIaLmNvbS5iY29tLnNvbGFyLmdwcmMuSW1h",
            "Z2USEQoJdGltZXN0YW1wGAMgASgEEiwKBHBvc2UYBCABKAsyHi5jb20uYmNv",
            "bS5zb2xhci5ncHJjLk1hdHJpeDR4NCLbAQoJTWF0cml4NHg0EgsKA20xMRgB",
            "IAEoAhILCgNtMTIYAiABKAISCwoDbTEzGAMgASgCEgsKA20xNBgEIAEoAhIL",
            "CgNtMjEYBSABKAISCwoDbTIyGAYgASgCEgsKA20yMxgHIAEoAhILCgNtMjQY",
            "CCABKAISCwoDbTMxGAkgASgCEgsKA20zMhgKIAEoAhILCgNtMzMYCyABKAIS",
            "CwoDbTM0GAwgASgCEgsKA200MRgNIAEoAhILCgNtNDIYDiABKAISCwoDbTQz",
            "GA8gASgCEgsKA200NBgQIAEoAiKAAQoJTWF0cml4M3gzEgsKA20xMRgBIAEo",
            "AhILCgNtMTIYAiABKAISCwoDbTEzGAMgASgCEgsKA20yMRgEIAEoAhILCgNt",
            "MjIYBSABKAISCwoDbTIzGAYgASgCEgsKA20zMRgHIAEoAhILCgNtMzIYCCAB",
            "KAISCwoDbTMzGAkgASgCIqcBCglNYXRyaXgzeDQSCwoDbTExGAEgASgCEgsK",
            "A20xMhgCIAEoAhILCgNtMTMYAyABKAISCwoDbTE0GAQgASgCEgsKA20yMRgF",
            "IAEoAhILCgNtMjIYBiABKAISCwoDbTIzGAcgASgCEgsKA20yNBgIIAEoAhIL",
            "CgNtMzEYCSABKAISCwoDbTMyGAogASgCEgsKA20zMxgLIAEoAhILCgNtMzQY",
            "DCABKAIqRwoMUGlwZWxpbmVNb2RlEh4KGlJFTE9DQUxJWkFUSU9OX0FORF9N",
            "QVBQSU5HEAASFwoTUkVMT0NBTElaQVRJT05fT05MWRABKh8KCkNhbWVyYVR5",
            "cGUSBwoDUkdCEAASCAoER1JBWRABKioKClN0ZXJlb1R5cGUSDgoKSG9yaXpv",
            "bnRhbBAAEgwKCFZlcnRpY2FsEAEqRgoYUmVsb2NhbGl6YXRpb25Qb3NlU3Rh",
            "dHVzEgsKB05PX1BPU0UQABIMCghORVdfUE9TRRABEg8KC0xBVEVTVF9QT1NF",
            "EAIqUAoNTWFwcGluZ1N0YXR1cxINCglCT09UU1RSQVAQABILCgdNQVBQSU5H",
            "EAESEQoNVFJBQ0tJTkdfTE9TVBACEhAKDExPT1BfQ0xPU1VSRRADKjIKC0lt",
            "YWdlTGF5b3V0EgoKBlJHQl8yNBAAEgoKBkdSRVlfOBABEgsKB0dSRVlfMTYQ",
            "AiouChBJbWFnZUNvbXByZXNzaW9uEggKBE5PTkUQABIHCgNQTkcQARIHCgNK",
            "UEcQAjL5CAoiU29sQVJNYXBwaW5nQW5kUmVsb2NhbGl6YXRpb25Qcm94eRJN",
            "Cg5SZWdpc3RlckNsaWVudBIaLmNvbS5iY29tLnNvbGFyLmdwcmMuRW1wdHka",
            "Hy5jb20uYmNvbS5zb2xhci5ncHJjLkNsaWVudFVVSUQSTwoQVW5yZWdpc3Rl",
            "ckNsaWVudBIfLmNvbS5iY29tLnNvbGFyLmdwcmMuQ2xpZW50VVVJRBoaLmNv",
            "bS5iY29tLnNvbGFyLmdwcmMuRW1wdHkSSgoESW5pdBImLmNvbS5iY29tLnNv",
            "bGFyLmdwcmMuUGlwZWxpbmVNb2RlVmFsdWUaGi5jb20uYmNvbS5zb2xhci5n",
            "cHJjLkVtcHR5EkQKBVN0YXJ0Eh8uY29tLmJjb20uc29sYXIuZ3ByYy5DbGll",
            "bnRVVUlEGhouY29tLmJjb20uc29sYXIuZ3ByYy5FbXB0eRJDCgRTdG9wEh8u",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5DbGllbnRVVUlEGhouY29tLmJjb20uc29s",
            "YXIuZ3ByYy5FbXB0eRJYChNTZXRDYW1lcmFQYXJhbWV0ZXJzEiUuY29tLmJj",
            "b20uc29sYXIuZ3ByYy5DYW1lcmFQYXJhbWV0ZXJzGhouY29tLmJjb20uc29s",
            "YXIuZ3ByYy5FbXB0eRJkChlTZXRDYW1lcmFQYXJhbWV0ZXJzU3RlcmVvEisu",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5DYW1lcmFQYXJhbWV0ZXJzU3RlcmVvGhou",
            "Y29tLmJjb20uc29sYXIuZ3ByYy5FbXB0eRJmChpzZXRSZWN0aWZpY2F0aW9u",
            "UGFyYW1ldGVycxIsLmNvbS5iY29tLnNvbGFyLmdwcmMuUmVjdGlmaWNhdGlv",
            "blBhcmFtZXRlcnMaGi5jb20uYmNvbS5zb2xhci5ncHJjLkVtcHR5EloKEFJl",
            "bG9jYWxpemVBbmRNYXASGy5jb20uYmNvbS5zb2xhci5ncHJjLkZyYW1lcxop",
            "LmNvbS5iY29tLnNvbGFyLmdwcmMuUmVsb2NhbGl6YXRpb25SZXN1bHQScAob",
            "UmVsb2NhbGl6ZUFuZE1hcEdyb3VuZFRydXRoEiYuY29tLmJjb20uc29sYXIu",
            "Z3ByYy5Hcm91bmRUcnV0aEZyYW1lcxopLmNvbS5iY29tLnNvbGFyLmdwcmMu",
            "UmVsb2NhbGl6YXRpb25SZXN1bHQSXAoOR2V0M0RUcmFuc2Zvcm0SHy5jb20u",
            "YmNvbS5zb2xhci5ncHJjLkNsaWVudFVVSUQaKS5jb20uYmNvbS5zb2xhci5n",
            "cHJjLlJlbG9jYWxpemF0aW9uUmVzdWx0Ej8KBVJlc2V0EhouY29tLmJjb20u",
            "c29sYXIuZ3ByYy5FbXB0eRoaLmNvbS5iY29tLnNvbGFyLmdwcmMuRW1wdHkS",
            "RwoLU2VuZE1lc3NhZ2USHC5jb20uYmNvbS5zb2xhci5ncHJjLk1lc3NhZ2Ua",
            "Gi5jb20uYmNvbS5zb2xhci5ncHJjLkVtcHR5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Bcom.Solar.Gprc.PipelineMode), typeof(global::Com.Bcom.Solar.Gprc.CameraType), typeof(global::Com.Bcom.Solar.Gprc.StereoType), typeof(global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus), typeof(global::Com.Bcom.Solar.Gprc.MappingStatus), typeof(global::Com.Bcom.Solar.Gprc.ImageLayout), typeof(global::Com.Bcom.Solar.Gprc.ImageCompression), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Empty), global::Com.Bcom.Solar.Gprc.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.ClientUUID), global::Com.Bcom.Solar.Gprc.ClientUUID.Parser, new[]{ "ClientUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.PipelineModeValue), global::Com.Bcom.Solar.Gprc.PipelineModeValue.Parser, new[]{ "ClientUuid", "PipelineMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Message), global::Com.Bcom.Solar.Gprc.Message.Parser, new[]{ "ClientUuid", "Message_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.CameraParameters), global::Com.Bcom.Solar.Gprc.CameraParameters.Parser, new[]{ "ClientUuid", "Name", "Id", "CameraType", "Width", "Height", "Intrinsics", "Distortion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.CameraParametersStereo), global::Com.Bcom.Solar.Gprc.CameraParametersStereo.Parser, new[]{ "ClientUuid", "Name1", "Id1", "CameraType1", "Width1", "Height1", "Intrinsics1", "Distortion1", "Name2", "Id2", "CameraType2", "Width2", "Height2", "Intrinsics2", "Distortion2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.CameraDistortion), global::Com.Bcom.Solar.Gprc.CameraDistortion.Parser, new[]{ "K1", "K2", "P1", "P2", "K3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.RectificationParameters), global::Com.Bcom.Solar.Gprc.RectificationParameters.Parser, new[]{ "ClientUuid", "Cam1Rotation", "Cam1Projection", "Cam1StereoType", "Cam1Baseline", "Cam2Rotation", "Cam2Projection", "Cam2StereoType", "Cam2Baseline" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.RelocalizationResult), global::Com.Bcom.Solar.Gprc.RelocalizationResult.Parser, new[]{ "PoseStatus", "Pose", "Confidence", "MappingStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Image), global::Com.Bcom.Solar.Gprc.Image.Parser, new[]{ "Width", "Height", "Data", "Layout", "ImageCompression" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Frames), global::Com.Bcom.Solar.Gprc.Frames.Parser, new[]{ "ClientUuid", "Frames_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.GroundTruthFrames), global::Com.Bcom.Solar.Gprc.GroundTruthFrames.Parser, new[]{ "ClientUuid", "Frames", "WorldTransorm", "FixedPose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Frame), global::Com.Bcom.Solar.Gprc.Frame.Parser, new[]{ "SensorId", "Image", "Timestamp", "Pose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Matrix4x4), global::Com.Bcom.Solar.Gprc.Matrix4x4.Parser, new[]{ "M11", "M12", "M13", "M14", "M21", "M22", "M23", "M24", "M31", "M32", "M33", "M34", "M41", "M42", "M43", "M44" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Matrix3x3), global::Com.Bcom.Solar.Gprc.Matrix3x3.Parser, new[]{ "M11", "M12", "M13", "M21", "M22", "M23", "M31", "M32", "M33" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Matrix3x4), global::Com.Bcom.Solar.Gprc.Matrix3x4.Parser, new[]{ "M11", "M12", "M13", "M14", "M21", "M22", "M23", "M24", "M31", "M32", "M33", "M34" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PipelineMode {
    [pbr::OriginalName("RELOCALIZATION_AND_MAPPING")] RelocalizationAndMapping = 0,
    [pbr::OriginalName("RELOCALIZATION_ONLY")] RelocalizationOnly = 1,
  }

  public enum CameraType {
    [pbr::OriginalName("RGB")] Rgb = 0,
    [pbr::OriginalName("GRAY")] Gray = 1,
  }

  public enum StereoType {
    [pbr::OriginalName("Horizontal")] Horizontal = 0,
    [pbr::OriginalName("Vertical")] Vertical = 1,
  }

  public enum RelocalizationPoseStatus {
    [pbr::OriginalName("NO_POSE")] NoPose = 0,
    [pbr::OriginalName("NEW_POSE")] NewPose = 1,
    [pbr::OriginalName("LATEST_POSE")] LatestPose = 2,
  }

  public enum MappingStatus {
    [pbr::OriginalName("BOOTSTRAP")] Bootstrap = 0,
    [pbr::OriginalName("MAPPING")] Mapping = 1,
    [pbr::OriginalName("TRACKING_LOST")] TrackingLost = 2,
    [pbr::OriginalName("LOOP_CLOSURE")] LoopClosure = 3,
  }

  public enum ImageLayout {
    [pbr::OriginalName("RGB_24")] Rgb24 = 0,
    [pbr::OriginalName("GREY_8")] Grey8 = 1,
    [pbr::OriginalName("GREY_16")] Grey16 = 2,
  }

  public enum ImageCompression {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("PNG")] Png = 1,
    [pbr::OriginalName("JPG")] Jpg = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ClientUUID : pb::IMessage<ClientUUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientUUID> _parser = new pb::MessageParser<ClientUUID>(() => new ClientUUID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientUUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientUUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientUUID(ClientUUID other) : this() {
      clientUuid_ = other.clientUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientUUID Clone() {
      return new ClientUUID(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientUUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientUUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientUUID other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PipelineModeValue : pb::IMessage<PipelineModeValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PipelineModeValue> _parser = new pb::MessageParser<PipelineModeValue>(() => new PipelineModeValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PipelineModeValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PipelineModeValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PipelineModeValue(PipelineModeValue other) : this() {
      clientUuid_ = other.clientUuid_;
      pipelineMode_ = other.pipelineMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PipelineModeValue Clone() {
      return new PipelineModeValue(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pipeline_mode" field.</summary>
    public const int PipelineModeFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.PipelineMode pipelineMode_ = global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.PipelineMode PipelineMode {
      get { return pipelineMode_; }
      set {
        pipelineMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PipelineModeValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PipelineModeValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (PipelineMode != other.PipelineMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (PipelineMode != global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping) hash ^= PipelineMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (PipelineMode != global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PipelineMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (PipelineMode != global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PipelineMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (PipelineMode != global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PipelineMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PipelineModeValue other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.PipelineMode != global::Com.Bcom.Solar.Gprc.PipelineMode.RelocalizationAndMapping) {
        PipelineMode = other.PipelineMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 16: {
            PipelineMode = (global::Com.Bcom.Solar.Gprc.PipelineMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 16: {
            PipelineMode = (global::Com.Bcom.Solar.Gprc.PipelineMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      clientUuid_ = other.clientUuid_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int Message_FieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message_ {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (Message_ != other.Message_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (Message_.Length != 0) hash ^= Message_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Message_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Message_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (Message_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.Message_.Length != 0) {
        Message_ = other.Message_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Message_ = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Message_ = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CameraParameters : pb::IMessage<CameraParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraParameters> _parser = new pb::MessageParser<CameraParameters>(() => new CameraParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters(CameraParameters other) : this() {
      clientUuid_ = other.clientUuid_;
      name_ = other.name_;
      id_ = other.id_;
      cameraType_ = other.cameraType_;
      width_ = other.width_;
      height_ = other.height_;
      intrinsics_ = other.intrinsics_ != null ? other.intrinsics_.Clone() : null;
      distortion_ = other.distortion_ != null ? other.distortion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters Clone() {
      return new CameraParameters(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "camera_type" field.</summary>
    public const int CameraTypeFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.CameraType cameraType_ = global::Com.Bcom.Solar.Gprc.CameraType.Rgb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraType CameraType {
      get { return cameraType_; }
      set {
        cameraType_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 5;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 6;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "intrinsics" field.</summary>
    public const int IntrinsicsFieldNumber = 7;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 intrinsics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Intrinsics {
      get { return intrinsics_; }
      set {
        intrinsics_ = value;
      }
    }

    /// <summary>Field number for the "distortion" field.</summary>
    public const int DistortionFieldNumber = 8;
    private global::Com.Bcom.Solar.Gprc.CameraDistortion distortion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraDistortion Distortion {
      get { return distortion_; }
      set {
        distortion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (CameraType != other.CameraType) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (!object.Equals(Intrinsics, other.Intrinsics)) return false;
      if (!object.Equals(Distortion, other.Distortion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) hash ^= CameraType.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (intrinsics_ != null) hash ^= Intrinsics.GetHashCode();
      if (distortion_ != null) hash ^= Distortion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CameraType);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (intrinsics_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Intrinsics);
      }
      if (distortion_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Distortion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CameraType);
      }
      if (Width != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (intrinsics_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Intrinsics);
      }
      if (distortion_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Distortion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CameraType);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (intrinsics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intrinsics);
      }
      if (distortion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distortion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraParameters other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        CameraType = other.CameraType;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.intrinsics_ != null) {
        if (intrinsics_ == null) {
          Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Intrinsics.MergeFrom(other.Intrinsics);
      }
      if (other.distortion_ != null) {
        if (distortion_ == null) {
          Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
        }
        Distortion.MergeFrom(other.Distortion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            CameraType = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 40: {
            Width = input.ReadUInt32();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 58: {
            if (intrinsics_ == null) {
              Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics);
            break;
          }
          case 66: {
            if (distortion_ == null) {
              Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            CameraType = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 40: {
            Width = input.ReadUInt32();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 58: {
            if (intrinsics_ == null) {
              Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics);
            break;
          }
          case 66: {
            if (distortion_ == null) {
              Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CameraParametersStereo : pb::IMessage<CameraParametersStereo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraParametersStereo> _parser = new pb::MessageParser<CameraParametersStereo>(() => new CameraParametersStereo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraParametersStereo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParametersStereo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParametersStereo(CameraParametersStereo other) : this() {
      clientUuid_ = other.clientUuid_;
      name1_ = other.name1_;
      id1_ = other.id1_;
      cameraType1_ = other.cameraType1_;
      width1_ = other.width1_;
      height1_ = other.height1_;
      intrinsics1_ = other.intrinsics1_ != null ? other.intrinsics1_.Clone() : null;
      distortion1_ = other.distortion1_ != null ? other.distortion1_.Clone() : null;
      name2_ = other.name2_;
      id2_ = other.id2_;
      cameraType2_ = other.cameraType2_;
      width2_ = other.width2_;
      height2_ = other.height2_;
      intrinsics2_ = other.intrinsics2_ != null ? other.intrinsics2_.Clone() : null;
      distortion2_ = other.distortion2_ != null ? other.distortion2_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParametersStereo Clone() {
      return new CameraParametersStereo(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name1" field.</summary>
    public const int Name1FieldNumber = 2;
    private string name1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name1 {
      get { return name1_; }
      set {
        name1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id1" field.</summary>
    public const int Id1FieldNumber = 3;
    private uint id1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id1 {
      get { return id1_; }
      set {
        id1_ = value;
      }
    }

    /// <summary>Field number for the "camera_type1" field.</summary>
    public const int CameraType1FieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.CameraType cameraType1_ = global::Com.Bcom.Solar.Gprc.CameraType.Rgb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraType CameraType1 {
      get { return cameraType1_; }
      set {
        cameraType1_ = value;
      }
    }

    /// <summary>Field number for the "width1" field.</summary>
    public const int Width1FieldNumber = 5;
    private uint width1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width1 {
      get { return width1_; }
      set {
        width1_ = value;
      }
    }

    /// <summary>Field number for the "height1" field.</summary>
    public const int Height1FieldNumber = 6;
    private uint height1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height1 {
      get { return height1_; }
      set {
        height1_ = value;
      }
    }

    /// <summary>Field number for the "intrinsics1" field.</summary>
    public const int Intrinsics1FieldNumber = 7;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 intrinsics1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Intrinsics1 {
      get { return intrinsics1_; }
      set {
        intrinsics1_ = value;
      }
    }

    /// <summary>Field number for the "distortion1" field.</summary>
    public const int Distortion1FieldNumber = 8;
    private global::Com.Bcom.Solar.Gprc.CameraDistortion distortion1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraDistortion Distortion1 {
      get { return distortion1_; }
      set {
        distortion1_ = value;
      }
    }

    /// <summary>Field number for the "name2" field.</summary>
    public const int Name2FieldNumber = 9;
    private string name2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name2 {
      get { return name2_; }
      set {
        name2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id2" field.</summary>
    public const int Id2FieldNumber = 10;
    private uint id2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id2 {
      get { return id2_; }
      set {
        id2_ = value;
      }
    }

    /// <summary>Field number for the "camera_type2" field.</summary>
    public const int CameraType2FieldNumber = 11;
    private global::Com.Bcom.Solar.Gprc.CameraType cameraType2_ = global::Com.Bcom.Solar.Gprc.CameraType.Rgb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraType CameraType2 {
      get { return cameraType2_; }
      set {
        cameraType2_ = value;
      }
    }

    /// <summary>Field number for the "width2" field.</summary>
    public const int Width2FieldNumber = 12;
    private uint width2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width2 {
      get { return width2_; }
      set {
        width2_ = value;
      }
    }

    /// <summary>Field number for the "height2" field.</summary>
    public const int Height2FieldNumber = 13;
    private uint height2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height2 {
      get { return height2_; }
      set {
        height2_ = value;
      }
    }

    /// <summary>Field number for the "intrinsics2" field.</summary>
    public const int Intrinsics2FieldNumber = 14;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 intrinsics2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Intrinsics2 {
      get { return intrinsics2_; }
      set {
        intrinsics2_ = value;
      }
    }

    /// <summary>Field number for the "distortion2" field.</summary>
    public const int Distortion2FieldNumber = 15;
    private global::Com.Bcom.Solar.Gprc.CameraDistortion distortion2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraDistortion Distortion2 {
      get { return distortion2_; }
      set {
        distortion2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraParametersStereo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraParametersStereo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (Name1 != other.Name1) return false;
      if (Id1 != other.Id1) return false;
      if (CameraType1 != other.CameraType1) return false;
      if (Width1 != other.Width1) return false;
      if (Height1 != other.Height1) return false;
      if (!object.Equals(Intrinsics1, other.Intrinsics1)) return false;
      if (!object.Equals(Distortion1, other.Distortion1)) return false;
      if (Name2 != other.Name2) return false;
      if (Id2 != other.Id2) return false;
      if (CameraType2 != other.CameraType2) return false;
      if (Width2 != other.Width2) return false;
      if (Height2 != other.Height2) return false;
      if (!object.Equals(Intrinsics2, other.Intrinsics2)) return false;
      if (!object.Equals(Distortion2, other.Distortion2)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (Name1.Length != 0) hash ^= Name1.GetHashCode();
      if (Id1 != 0) hash ^= Id1.GetHashCode();
      if (CameraType1 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) hash ^= CameraType1.GetHashCode();
      if (Width1 != 0) hash ^= Width1.GetHashCode();
      if (Height1 != 0) hash ^= Height1.GetHashCode();
      if (intrinsics1_ != null) hash ^= Intrinsics1.GetHashCode();
      if (distortion1_ != null) hash ^= Distortion1.GetHashCode();
      if (Name2.Length != 0) hash ^= Name2.GetHashCode();
      if (Id2 != 0) hash ^= Id2.GetHashCode();
      if (CameraType2 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) hash ^= CameraType2.GetHashCode();
      if (Width2 != 0) hash ^= Width2.GetHashCode();
      if (Height2 != 0) hash ^= Height2.GetHashCode();
      if (intrinsics2_ != null) hash ^= Intrinsics2.GetHashCode();
      if (distortion2_ != null) hash ^= Distortion2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name1);
      }
      if (Id1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id1);
      }
      if (CameraType1 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CameraType1);
      }
      if (Width1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width1);
      }
      if (Height1 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height1);
      }
      if (intrinsics1_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Intrinsics1);
      }
      if (distortion1_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Distortion1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name2);
      }
      if (Id2 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Id2);
      }
      if (CameraType2 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CameraType2);
      }
      if (Width2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Width2);
      }
      if (Height2 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Height2);
      }
      if (intrinsics2_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Intrinsics2);
      }
      if (distortion2_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Distortion2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name1);
      }
      if (Id1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id1);
      }
      if (CameraType1 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CameraType1);
      }
      if (Width1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Width1);
      }
      if (Height1 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height1);
      }
      if (intrinsics1_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Intrinsics1);
      }
      if (distortion1_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Distortion1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name2);
      }
      if (Id2 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Id2);
      }
      if (CameraType2 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CameraType2);
      }
      if (Width2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Width2);
      }
      if (Height2 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Height2);
      }
      if (intrinsics2_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Intrinsics2);
      }
      if (distortion2_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Distortion2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (Name1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name1);
      }
      if (Id1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id1);
      }
      if (CameraType1 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CameraType1);
      }
      if (Width1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width1);
      }
      if (Height1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height1);
      }
      if (intrinsics1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intrinsics1);
      }
      if (distortion1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distortion1);
      }
      if (Name2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name2);
      }
      if (Id2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id2);
      }
      if (CameraType2 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CameraType2);
      }
      if (Width2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width2);
      }
      if (Height2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height2);
      }
      if (intrinsics2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intrinsics2);
      }
      if (distortion2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distortion2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraParametersStereo other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.Name1.Length != 0) {
        Name1 = other.Name1;
      }
      if (other.Id1 != 0) {
        Id1 = other.Id1;
      }
      if (other.CameraType1 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        CameraType1 = other.CameraType1;
      }
      if (other.Width1 != 0) {
        Width1 = other.Width1;
      }
      if (other.Height1 != 0) {
        Height1 = other.Height1;
      }
      if (other.intrinsics1_ != null) {
        if (intrinsics1_ == null) {
          Intrinsics1 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Intrinsics1.MergeFrom(other.Intrinsics1);
      }
      if (other.distortion1_ != null) {
        if (distortion1_ == null) {
          Distortion1 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
        }
        Distortion1.MergeFrom(other.Distortion1);
      }
      if (other.Name2.Length != 0) {
        Name2 = other.Name2;
      }
      if (other.Id2 != 0) {
        Id2 = other.Id2;
      }
      if (other.CameraType2 != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        CameraType2 = other.CameraType2;
      }
      if (other.Width2 != 0) {
        Width2 = other.Width2;
      }
      if (other.Height2 != 0) {
        Height2 = other.Height2;
      }
      if (other.intrinsics2_ != null) {
        if (intrinsics2_ == null) {
          Intrinsics2 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Intrinsics2.MergeFrom(other.Intrinsics2);
      }
      if (other.distortion2_ != null) {
        if (distortion2_ == null) {
          Distortion2 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
        }
        Distortion2.MergeFrom(other.Distortion2);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Name1 = input.ReadString();
            break;
          }
          case 24: {
            Id1 = input.ReadUInt32();
            break;
          }
          case 32: {
            CameraType1 = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 40: {
            Width1 = input.ReadUInt32();
            break;
          }
          case 48: {
            Height1 = input.ReadUInt32();
            break;
          }
          case 58: {
            if (intrinsics1_ == null) {
              Intrinsics1 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics1);
            break;
          }
          case 66: {
            if (distortion1_ == null) {
              Distortion1 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion1);
            break;
          }
          case 74: {
            Name2 = input.ReadString();
            break;
          }
          case 80: {
            Id2 = input.ReadUInt32();
            break;
          }
          case 88: {
            CameraType2 = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 96: {
            Width2 = input.ReadUInt32();
            break;
          }
          case 104: {
            Height2 = input.ReadUInt32();
            break;
          }
          case 114: {
            if (intrinsics2_ == null) {
              Intrinsics2 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics2);
            break;
          }
          case 122: {
            if (distortion2_ == null) {
              Distortion2 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion2);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            Name1 = input.ReadString();
            break;
          }
          case 24: {
            Id1 = input.ReadUInt32();
            break;
          }
          case 32: {
            CameraType1 = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 40: {
            Width1 = input.ReadUInt32();
            break;
          }
          case 48: {
            Height1 = input.ReadUInt32();
            break;
          }
          case 58: {
            if (intrinsics1_ == null) {
              Intrinsics1 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics1);
            break;
          }
          case 66: {
            if (distortion1_ == null) {
              Distortion1 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion1);
            break;
          }
          case 74: {
            Name2 = input.ReadString();
            break;
          }
          case 80: {
            Id2 = input.ReadUInt32();
            break;
          }
          case 88: {
            CameraType2 = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 96: {
            Width2 = input.ReadUInt32();
            break;
          }
          case 104: {
            Height2 = input.ReadUInt32();
            break;
          }
          case 114: {
            if (intrinsics2_ == null) {
              Intrinsics2 = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics2);
            break;
          }
          case 122: {
            if (distortion2_ == null) {
              Distortion2 = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion2);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CameraDistortion : pb::IMessage<CameraDistortion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraDistortion> _parser = new pb::MessageParser<CameraDistortion>(() => new CameraDistortion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraDistortion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion(CameraDistortion other) : this() {
      k1_ = other.k1_;
      k2_ = other.k2_;
      p1_ = other.p1_;
      p2_ = other.p2_;
      k3_ = other.k3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion Clone() {
      return new CameraDistortion(this);
    }

    /// <summary>Field number for the "K_1" field.</summary>
    public const int K1FieldNumber = 1;
    private float k1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K1 {
      get { return k1_; }
      set {
        k1_ = value;
      }
    }

    /// <summary>Field number for the "K_2" field.</summary>
    public const int K2FieldNumber = 2;
    private float k2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K2 {
      get { return k2_; }
      set {
        k2_ = value;
      }
    }

    /// <summary>Field number for the "P_1" field.</summary>
    public const int P1FieldNumber = 3;
    private float p1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float P1 {
      get { return p1_; }
      set {
        p1_ = value;
      }
    }

    /// <summary>Field number for the "P_2" field.</summary>
    public const int P2FieldNumber = 4;
    private float p2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float P2 {
      get { return p2_; }
      set {
        p2_ = value;
      }
    }

    /// <summary>Field number for the "K_3" field.</summary>
    public const int K3FieldNumber = 5;
    private float k3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K3 {
      get { return k3_; }
      set {
        k3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraDistortion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraDistortion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K1, other.K1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K2, other.K2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(P1, other.P1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(P2, other.P2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K3, other.K3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (K1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K1);
      if (K2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K2);
      if (P1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(P1);
      if (P2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(P2);
      if (K3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (K1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(K1);
      }
      if (K2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(K2);
      }
      if (P1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(P1);
      }
      if (P2 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(P2);
      }
      if (K3 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(K3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (K1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(K1);
      }
      if (K2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(K2);
      }
      if (P1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(P1);
      }
      if (P2 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(P2);
      }
      if (K3 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(K3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (K1 != 0F) {
        size += 1 + 4;
      }
      if (K2 != 0F) {
        size += 1 + 4;
      }
      if (P1 != 0F) {
        size += 1 + 4;
      }
      if (P2 != 0F) {
        size += 1 + 4;
      }
      if (K3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraDistortion other) {
      if (other == null) {
        return;
      }
      if (other.K1 != 0F) {
        K1 = other.K1;
      }
      if (other.K2 != 0F) {
        K2 = other.K2;
      }
      if (other.P1 != 0F) {
        P1 = other.P1;
      }
      if (other.P2 != 0F) {
        P2 = other.P2;
      }
      if (other.K3 != 0F) {
        K3 = other.K3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            K1 = input.ReadFloat();
            break;
          }
          case 21: {
            K2 = input.ReadFloat();
            break;
          }
          case 29: {
            P1 = input.ReadFloat();
            break;
          }
          case 37: {
            P2 = input.ReadFloat();
            break;
          }
          case 45: {
            K3 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            K1 = input.ReadFloat();
            break;
          }
          case 21: {
            K2 = input.ReadFloat();
            break;
          }
          case 29: {
            P1 = input.ReadFloat();
            break;
          }
          case 37: {
            P2 = input.ReadFloat();
            break;
          }
          case 45: {
            K3 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RectificationParameters : pb::IMessage<RectificationParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RectificationParameters> _parser = new pb::MessageParser<RectificationParameters>(() => new RectificationParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RectificationParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RectificationParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RectificationParameters(RectificationParameters other) : this() {
      clientUuid_ = other.clientUuid_;
      cam1Rotation_ = other.cam1Rotation_ != null ? other.cam1Rotation_.Clone() : null;
      cam1Projection_ = other.cam1Projection_ != null ? other.cam1Projection_.Clone() : null;
      cam1StereoType_ = other.cam1StereoType_;
      cam1Baseline_ = other.cam1Baseline_;
      cam2Rotation_ = other.cam2Rotation_ != null ? other.cam2Rotation_.Clone() : null;
      cam2Projection_ = other.cam2Projection_ != null ? other.cam2Projection_.Clone() : null;
      cam2StereoType_ = other.cam2StereoType_;
      cam2Baseline_ = other.cam2Baseline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RectificationParameters Clone() {
      return new RectificationParameters(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cam1_rotation" field.</summary>
    public const int Cam1RotationFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 cam1Rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Cam1Rotation {
      get { return cam1Rotation_; }
      set {
        cam1Rotation_ = value;
      }
    }

    /// <summary>Field number for the "cam1_projection" field.</summary>
    public const int Cam1ProjectionFieldNumber = 3;
    private global::Com.Bcom.Solar.Gprc.Matrix3x4 cam1Projection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x4 Cam1Projection {
      get { return cam1Projection_; }
      set {
        cam1Projection_ = value;
      }
    }

    /// <summary>Field number for the "cam1_stereo_type" field.</summary>
    public const int Cam1StereoTypeFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.StereoType cam1StereoType_ = global::Com.Bcom.Solar.Gprc.StereoType.Horizontal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.StereoType Cam1StereoType {
      get { return cam1StereoType_; }
      set {
        cam1StereoType_ = value;
      }
    }

    /// <summary>Field number for the "cam1_baseline" field.</summary>
    public const int Cam1BaselineFieldNumber = 5;
    private float cam1Baseline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cam1Baseline {
      get { return cam1Baseline_; }
      set {
        cam1Baseline_ = value;
      }
    }

    /// <summary>Field number for the "cam2_rotation" field.</summary>
    public const int Cam2RotationFieldNumber = 6;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 cam2Rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Cam2Rotation {
      get { return cam2Rotation_; }
      set {
        cam2Rotation_ = value;
      }
    }

    /// <summary>Field number for the "cam2_projection" field.</summary>
    public const int Cam2ProjectionFieldNumber = 7;
    private global::Com.Bcom.Solar.Gprc.Matrix3x4 cam2Projection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x4 Cam2Projection {
      get { return cam2Projection_; }
      set {
        cam2Projection_ = value;
      }
    }

    /// <summary>Field number for the "cam2_stereo_type" field.</summary>
    public const int Cam2StereoTypeFieldNumber = 8;
    private global::Com.Bcom.Solar.Gprc.StereoType cam2StereoType_ = global::Com.Bcom.Solar.Gprc.StereoType.Horizontal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.StereoType Cam2StereoType {
      get { return cam2StereoType_; }
      set {
        cam2StereoType_ = value;
      }
    }

    /// <summary>Field number for the "cam2_baseline" field.</summary>
    public const int Cam2BaselineFieldNumber = 9;
    private float cam2Baseline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cam2Baseline {
      get { return cam2Baseline_; }
      set {
        cam2Baseline_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RectificationParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RectificationParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (!object.Equals(Cam1Rotation, other.Cam1Rotation)) return false;
      if (!object.Equals(Cam1Projection, other.Cam1Projection)) return false;
      if (Cam1StereoType != other.Cam1StereoType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Cam1Baseline, other.Cam1Baseline)) return false;
      if (!object.Equals(Cam2Rotation, other.Cam2Rotation)) return false;
      if (!object.Equals(Cam2Projection, other.Cam2Projection)) return false;
      if (Cam2StereoType != other.Cam2StereoType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Cam2Baseline, other.Cam2Baseline)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (cam1Rotation_ != null) hash ^= Cam1Rotation.GetHashCode();
      if (cam1Projection_ != null) hash ^= Cam1Projection.GetHashCode();
      if (Cam1StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) hash ^= Cam1StereoType.GetHashCode();
      if (Cam1Baseline != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Cam1Baseline);
      if (cam2Rotation_ != null) hash ^= Cam2Rotation.GetHashCode();
      if (cam2Projection_ != null) hash ^= Cam2Projection.GetHashCode();
      if (Cam2StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) hash ^= Cam2StereoType.GetHashCode();
      if (Cam2Baseline != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Cam2Baseline);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (cam1Rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cam1Rotation);
      }
      if (cam1Projection_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cam1Projection);
      }
      if (Cam1StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Cam1StereoType);
      }
      if (Cam1Baseline != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Cam1Baseline);
      }
      if (cam2Rotation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Cam2Rotation);
      }
      if (cam2Projection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Cam2Projection);
      }
      if (Cam2StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Cam2StereoType);
      }
      if (Cam2Baseline != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Cam2Baseline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (cam1Rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cam1Rotation);
      }
      if (cam1Projection_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cam1Projection);
      }
      if (Cam1StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Cam1StereoType);
      }
      if (Cam1Baseline != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Cam1Baseline);
      }
      if (cam2Rotation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Cam2Rotation);
      }
      if (cam2Projection_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Cam2Projection);
      }
      if (Cam2StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Cam2StereoType);
      }
      if (Cam2Baseline != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Cam2Baseline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (cam1Rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cam1Rotation);
      }
      if (cam1Projection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cam1Projection);
      }
      if (Cam1StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cam1StereoType);
      }
      if (Cam1Baseline != 0F) {
        size += 1 + 4;
      }
      if (cam2Rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cam2Rotation);
      }
      if (cam2Projection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cam2Projection);
      }
      if (Cam2StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cam2StereoType);
      }
      if (Cam2Baseline != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RectificationParameters other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.cam1Rotation_ != null) {
        if (cam1Rotation_ == null) {
          Cam1Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Cam1Rotation.MergeFrom(other.Cam1Rotation);
      }
      if (other.cam1Projection_ != null) {
        if (cam1Projection_ == null) {
          Cam1Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
        }
        Cam1Projection.MergeFrom(other.Cam1Projection);
      }
      if (other.Cam1StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        Cam1StereoType = other.Cam1StereoType;
      }
      if (other.Cam1Baseline != 0F) {
        Cam1Baseline = other.Cam1Baseline;
      }
      if (other.cam2Rotation_ != null) {
        if (cam2Rotation_ == null) {
          Cam2Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Cam2Rotation.MergeFrom(other.Cam2Rotation);
      }
      if (other.cam2Projection_ != null) {
        if (cam2Projection_ == null) {
          Cam2Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
        }
        Cam2Projection.MergeFrom(other.Cam2Projection);
      }
      if (other.Cam2StereoType != global::Com.Bcom.Solar.Gprc.StereoType.Horizontal) {
        Cam2StereoType = other.Cam2StereoType;
      }
      if (other.Cam2Baseline != 0F) {
        Cam2Baseline = other.Cam2Baseline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            if (cam1Rotation_ == null) {
              Cam1Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Cam1Rotation);
            break;
          }
          case 26: {
            if (cam1Projection_ == null) {
              Cam1Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
            }
            input.ReadMessage(Cam1Projection);
            break;
          }
          case 32: {
            Cam1StereoType = (global::Com.Bcom.Solar.Gprc.StereoType) input.ReadEnum();
            break;
          }
          case 45: {
            Cam1Baseline = input.ReadFloat();
            break;
          }
          case 50: {
            if (cam2Rotation_ == null) {
              Cam2Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Cam2Rotation);
            break;
          }
          case 58: {
            if (cam2Projection_ == null) {
              Cam2Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
            }
            input.ReadMessage(Cam2Projection);
            break;
          }
          case 64: {
            Cam2StereoType = (global::Com.Bcom.Solar.Gprc.StereoType) input.ReadEnum();
            break;
          }
          case 77: {
            Cam2Baseline = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            if (cam1Rotation_ == null) {
              Cam1Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Cam1Rotation);
            break;
          }
          case 26: {
            if (cam1Projection_ == null) {
              Cam1Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
            }
            input.ReadMessage(Cam1Projection);
            break;
          }
          case 32: {
            Cam1StereoType = (global::Com.Bcom.Solar.Gprc.StereoType) input.ReadEnum();
            break;
          }
          case 45: {
            Cam1Baseline = input.ReadFloat();
            break;
          }
          case 50: {
            if (cam2Rotation_ == null) {
              Cam2Rotation = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Cam2Rotation);
            break;
          }
          case 58: {
            if (cam2Projection_ == null) {
              Cam2Projection = new global::Com.Bcom.Solar.Gprc.Matrix3x4();
            }
            input.ReadMessage(Cam2Projection);
            break;
          }
          case 64: {
            Cam2StereoType = (global::Com.Bcom.Solar.Gprc.StereoType) input.ReadEnum();
            break;
          }
          case 77: {
            Cam2Baseline = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RelocalizationResult : pb::IMessage<RelocalizationResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelocalizationResult> _parser = new pb::MessageParser<RelocalizationResult>(() => new RelocalizationResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelocalizationResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult(RelocalizationResult other) : this() {
      poseStatus_ = other.poseStatus_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      confidence_ = other.confidence_;
      mappingStatus_ = other.mappingStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult Clone() {
      return new RelocalizationResult(this);
    }

    /// <summary>Field number for the "pose_status" field.</summary>
    public const int PoseStatusFieldNumber = 1;
    private global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus poseStatus_ = global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus PoseStatus {
      get { return poseStatus_; }
      set {
        poseStatus_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Matrix4x4 pose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix4x4 Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 3;
    private float confidence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "mapping_status" field.</summary>
    public const int MappingStatusFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.MappingStatus mappingStatus_ = global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.MappingStatus MappingStatus {
      get { return mappingStatus_; }
      set {
        mappingStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelocalizationResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelocalizationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoseStatus != other.PoseStatus) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if (MappingStatus != other.MappingStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) hash ^= PoseStatus.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (MappingStatus != global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap) hash ^= MappingStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PoseStatus);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (MappingStatus != global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MappingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PoseStatus);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (MappingStatus != global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MappingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PoseStatus);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (MappingStatus != global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MappingStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelocalizationResult other) {
      if (other == null) {
        return;
      }
      if (other.PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        PoseStatus = other.PoseStatus;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      if (other.MappingStatus != global::Com.Bcom.Solar.Gprc.MappingStatus.Bootstrap) {
        MappingStatus = other.MappingStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PoseStatus = (global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
          case 32: {
            MappingStatus = (global::Com.Bcom.Solar.Gprc.MappingStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PoseStatus = (global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
          case 32: {
            MappingStatus = (global::Com.Bcom.Solar.Gprc.MappingStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Image : pb::IMessage<Image>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      data_ = other.data_;
      layout_ = other.layout_;
      imageCompression_ = other.imageCompression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.ImageLayout layout_ = global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.ImageLayout Layout {
      get { return layout_; }
      set {
        layout_ = value;
      }
    }

    /// <summary>Field number for the "imageCompression" field.</summary>
    public const int ImageCompressionFieldNumber = 5;
    private global::Com.Bcom.Solar.Gprc.ImageCompression imageCompression_ = global::Com.Bcom.Solar.Gprc.ImageCompression.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.ImageCompression ImageCompression {
      get { return imageCompression_; }
      set {
        imageCompression_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Data != other.Data) return false;
      if (Layout != other.Layout) return false;
      if (ImageCompression != other.ImageCompression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) hash ^= Layout.GetHashCode();
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) hash ^= ImageCompression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageCompression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageCompression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImageCompression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        Layout = other.Layout;
      }
      if (other.ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        ImageCompression = other.ImageCompression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 32: {
            Layout = (global::Com.Bcom.Solar.Gprc.ImageLayout) input.ReadEnum();
            break;
          }
          case 40: {
            ImageCompression = (global::Com.Bcom.Solar.Gprc.ImageCompression) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 32: {
            Layout = (global::Com.Bcom.Solar.Gprc.ImageLayout) input.ReadEnum();
            break;
          }
          case 40: {
            ImageCompression = (global::Com.Bcom.Solar.Gprc.ImageCompression) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Frames : pb::IMessage<Frames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Frames> _parser = new pb::MessageParser<Frames>(() => new Frames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frames(Frames other) : this() {
      clientUuid_ = other.clientUuid_;
      frames_ = other.frames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frames Clone() {
      return new Frames(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int Frames_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Bcom.Solar.Gprc.Frame> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Bcom.Solar.Gprc.Frame.Parser);
    private readonly pbc::RepeatedField<global::Com.Bcom.Solar.Gprc.Frame> frames_ = new pbc::RepeatedField<global::Com.Bcom.Solar.Gprc.Frame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Bcom.Solar.Gprc.Frame> Frames_ {
      get { return frames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if(!frames_.Equals(other.frames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      hash ^= frames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      frames_.WriteTo(output, _repeated_frames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      frames_.WriteTo(ref output, _repeated_frames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frames other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      frames_.Add(other.frames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            frames_.AddEntriesFrom(ref input, _repeated_frames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroundTruthFrames : pb::IMessage<GroundTruthFrames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroundTruthFrames> _parser = new pb::MessageParser<GroundTruthFrames>(() => new GroundTruthFrames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroundTruthFrames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundTruthFrames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundTruthFrames(GroundTruthFrames other) : this() {
      clientUuid_ = other.clientUuid_;
      frames_ = other.frames_ != null ? other.frames_.Clone() : null;
      worldTransorm_ = other.worldTransorm_ != null ? other.worldTransorm_.Clone() : null;
      fixedPose_ = other.fixedPose_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroundTruthFrames Clone() {
      return new GroundTruthFrames(this);
    }

    /// <summary>Field number for the "client_uuid" field.</summary>
    public const int ClientUuidFieldNumber = 1;
    private string clientUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientUuid {
      get { return clientUuid_; }
      set {
        clientUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Frames frames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Frames Frames {
      get { return frames_; }
      set {
        frames_ = value;
      }
    }

    /// <summary>Field number for the "world_transorm" field.</summary>
    public const int WorldTransormFieldNumber = 3;
    private global::Com.Bcom.Solar.Gprc.Matrix4x4 worldTransorm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix4x4 WorldTransorm {
      get { return worldTransorm_; }
      set {
        worldTransorm_ = value;
      }
    }

    /// <summary>Field number for the "fixed_pose" field.</summary>
    public const int FixedPoseFieldNumber = 4;
    private bool fixedPose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FixedPose {
      get { return fixedPose_; }
      set {
        fixedPose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroundTruthFrames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroundTruthFrames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientUuid != other.ClientUuid) return false;
      if (!object.Equals(Frames, other.Frames)) return false;
      if (!object.Equals(WorldTransorm, other.WorldTransorm)) return false;
      if (FixedPose != other.FixedPose) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientUuid.Length != 0) hash ^= ClientUuid.GetHashCode();
      if (frames_ != null) hash ^= Frames.GetHashCode();
      if (worldTransorm_ != null) hash ^= WorldTransorm.GetHashCode();
      if (FixedPose != false) hash ^= FixedPose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (frames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Frames);
      }
      if (worldTransorm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WorldTransorm);
      }
      if (FixedPose != false) {
        output.WriteRawTag(32);
        output.WriteBool(FixedPose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientUuid);
      }
      if (frames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Frames);
      }
      if (worldTransorm_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WorldTransorm);
      }
      if (FixedPose != false) {
        output.WriteRawTag(32);
        output.WriteBool(FixedPose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientUuid);
      }
      if (frames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frames);
      }
      if (worldTransorm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldTransorm);
      }
      if (FixedPose != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroundTruthFrames other) {
      if (other == null) {
        return;
      }
      if (other.ClientUuid.Length != 0) {
        ClientUuid = other.ClientUuid;
      }
      if (other.frames_ != null) {
        if (frames_ == null) {
          Frames = new global::Com.Bcom.Solar.Gprc.Frames();
        }
        Frames.MergeFrom(other.Frames);
      }
      if (other.worldTransorm_ != null) {
        if (worldTransorm_ == null) {
          WorldTransorm = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
        }
        WorldTransorm.MergeFrom(other.WorldTransorm);
      }
      if (other.FixedPose != false) {
        FixedPose = other.FixedPose;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            if (frames_ == null) {
              Frames = new global::Com.Bcom.Solar.Gprc.Frames();
            }
            input.ReadMessage(Frames);
            break;
          }
          case 26: {
            if (worldTransorm_ == null) {
              WorldTransorm = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(WorldTransorm);
            break;
          }
          case 32: {
            FixedPose = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientUuid = input.ReadString();
            break;
          }
          case 18: {
            if (frames_ == null) {
              Frames = new global::Com.Bcom.Solar.Gprc.Frames();
            }
            input.ReadMessage(Frames);
            break;
          }
          case 26: {
            if (worldTransorm_ == null) {
              WorldTransorm = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(WorldTransorm);
            break;
          }
          case 32: {
            FixedPose = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Frame : pb::IMessage<Frame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame(Frame other) : this() {
      sensorId_ = other.sensorId_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      timestamp_ = other.timestamp_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame Clone() {
      return new Frame(this);
    }

    /// <summary>Field number for the "sensor_id" field.</summary>
    public const int SensorIdFieldNumber = 1;
    private int sensorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SensorId {
      get { return sensorId_; }
      set {
        sensorId_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.Matrix4x4 pose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix4x4 Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SensorId != other.SensorId) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SensorId != 0) hash ^= SensorId.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SensorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SensorId);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (pose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SensorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SensorId);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (pose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SensorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SensorId);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frame other) {
      if (other == null) {
        return;
      }
      if (other.SensorId != 0) {
        SensorId = other.SensorId;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Com.Bcom.Solar.Gprc.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
        }
        Pose.MergeFrom(other.Pose);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SensorId = input.ReadInt32();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::Com.Bcom.Solar.Gprc.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SensorId = input.ReadInt32();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::Com.Bcom.Solar.Gprc.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix4x4 : pb::IMessage<Matrix4x4>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix4x4> _parser = new pb::MessageParser<Matrix4x4>(() => new Matrix4x4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix4x4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4(Matrix4x4 other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m14_ = other.m14_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m24_ = other.m24_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      m34_ = other.m34_;
      m41_ = other.m41_;
      m42_ = other.m42_;
      m43_ = other.m43_;
      m44_ = other.m44_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4 Clone() {
      return new Matrix4x4(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m14" field.</summary>
    public const int M14FieldNumber = 4;
    private float m14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M14 {
      get { return m14_; }
      set {
        m14_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 5;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 6;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 7;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m24" field.</summary>
    public const int M24FieldNumber = 8;
    private float m24_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M24 {
      get { return m24_; }
      set {
        m24_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 9;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 10;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 11;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    /// <summary>Field number for the "m34" field.</summary>
    public const int M34FieldNumber = 12;
    private float m34_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M34 {
      get { return m34_; }
      set {
        m34_ = value;
      }
    }

    /// <summary>Field number for the "m41" field.</summary>
    public const int M41FieldNumber = 13;
    private float m41_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M41 {
      get { return m41_; }
      set {
        m41_ = value;
      }
    }

    /// <summary>Field number for the "m42" field.</summary>
    public const int M42FieldNumber = 14;
    private float m42_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M42 {
      get { return m42_; }
      set {
        m42_ = value;
      }
    }

    /// <summary>Field number for the "m43" field.</summary>
    public const int M43FieldNumber = 15;
    private float m43_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M43 {
      get { return m43_; }
      set {
        m43_ = value;
      }
    }

    /// <summary>Field number for the "m44" field.</summary>
    public const int M44FieldNumber = 16;
    private float m44_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M44 {
      get { return m44_; }
      set {
        m44_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix4x4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix4x4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M14, other.M14)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M24, other.M24)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M34, other.M34)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M41, other.M41)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M42, other.M42)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M43, other.M43)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M44, other.M44)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M14 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M14);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M24 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M24);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (M34 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M34);
      if (M41 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M41);
      if (M42 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M42);
      if (M43 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M43);
      if (M44 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M44);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (M41 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(M41);
      }
      if (M42 != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(M42);
      }
      if (M43 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(M43);
      }
      if (M44 != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(M44);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (M41 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(M41);
      }
      if (M42 != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(M42);
      }
      if (M43 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(M43);
      }
      if (M44 != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(M44);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M14 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M24 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (M34 != 0F) {
        size += 1 + 4;
      }
      if (M41 != 0F) {
        size += 1 + 4;
      }
      if (M42 != 0F) {
        size += 1 + 4;
      }
      if (M43 != 0F) {
        size += 1 + 4;
      }
      if (M44 != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix4x4 other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M14 != 0F) {
        M14 = other.M14;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M24 != 0F) {
        M24 = other.M24;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      if (other.M34 != 0F) {
        M34 = other.M34;
      }
      if (other.M41 != 0F) {
        M41 = other.M41;
      }
      if (other.M42 != 0F) {
        M42 = other.M42;
      }
      if (other.M43 != 0F) {
        M43 = other.M43;
      }
      if (other.M44 != 0F) {
        M44 = other.M44;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
          case 109: {
            M41 = input.ReadFloat();
            break;
          }
          case 117: {
            M42 = input.ReadFloat();
            break;
          }
          case 125: {
            M43 = input.ReadFloat();
            break;
          }
          case 133: {
            M44 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
          case 109: {
            M41 = input.ReadFloat();
            break;
          }
          case 117: {
            M42 = input.ReadFloat();
            break;
          }
          case 125: {
            M43 = input.ReadFloat();
            break;
          }
          case 133: {
            M44 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix3x3 : pb::IMessage<Matrix3x3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix3x3> _parser = new pb::MessageParser<Matrix3x3>(() => new Matrix3x3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix3x3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3(Matrix3x3 other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3 Clone() {
      return new Matrix3x3(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 4;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 5;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 6;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 7;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 8;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 9;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix3x3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix3x3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M21 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M23);
      }
      if (M31 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M33);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M21 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M23);
      }
      if (M31 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M33);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix3x3 other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M21 = input.ReadFloat();
            break;
          }
          case 45: {
            M22 = input.ReadFloat();
            break;
          }
          case 53: {
            M23 = input.ReadFloat();
            break;
          }
          case 61: {
            M31 = input.ReadFloat();
            break;
          }
          case 69: {
            M32 = input.ReadFloat();
            break;
          }
          case 77: {
            M33 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M21 = input.ReadFloat();
            break;
          }
          case 45: {
            M22 = input.ReadFloat();
            break;
          }
          case 53: {
            M23 = input.ReadFloat();
            break;
          }
          case 61: {
            M31 = input.ReadFloat();
            break;
          }
          case 69: {
            M32 = input.ReadFloat();
            break;
          }
          case 77: {
            M33 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix3x4 : pb::IMessage<Matrix3x4>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix3x4> _parser = new pb::MessageParser<Matrix3x4>(() => new Matrix3x4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix3x4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x4(Matrix3x4 other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m14_ = other.m14_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m24_ = other.m24_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      m34_ = other.m34_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x4 Clone() {
      return new Matrix3x4(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m14" field.</summary>
    public const int M14FieldNumber = 4;
    private float m14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M14 {
      get { return m14_; }
      set {
        m14_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 5;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 6;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 7;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m24" field.</summary>
    public const int M24FieldNumber = 8;
    private float m24_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M24 {
      get { return m24_; }
      set {
        m24_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 9;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 10;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 11;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    /// <summary>Field number for the "m34" field.</summary>
    public const int M34FieldNumber = 12;
    private float m34_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M34 {
      get { return m34_; }
      set {
        m34_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix3x4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix3x4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M14, other.M14)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M24, other.M24)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M34, other.M34)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M14 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M14);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M24 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M24);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (M34 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M34);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M14 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M24 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (M34 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix3x4 other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M14 != 0F) {
        M14 = other.M14;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M24 != 0F) {
        M24 = other.M24;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      if (other.M34 != 0F) {
        M34 = other.M34;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
