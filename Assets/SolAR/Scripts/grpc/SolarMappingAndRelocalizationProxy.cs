// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: solar_mapping_and_relocalization_proxy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Bcom.Solar.Gprc {

  /// <summary>Holder for reflection information generated from solar_mapping_and_relocalization_proxy.proto</summary>
  public static partial class SolarMappingAndRelocalizationProxyReflection {

    #region Descriptor
    /// <summary>File descriptor for solar_mapping_and_relocalization_proxy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SolarMappingAndRelocalizationProxyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixzb2xhcl9tYXBwaW5nX2FuZF9yZWxvY2FsaXphdGlvbl9wcm94eS5wcm90",
            "bxITY29tLmJjb20uc29sYXIuZ3ByYyIHCgVFbXB0eSIaCgdNZXNzYWdlEg8K",
            "B21lc3NhZ2UYASABKAki8AEKEENhbWVyYVBhcmFtZXRlcnMSDAoEbmFtZRgB",
            "IAEoCRIKCgJpZBgCIAEoDRI0CgtjYW1lcmFfdHlwZRgDIAEoDjIfLmNvbS5i",
            "Y29tLnNvbGFyLmdwcmMuQ2FtZXJhVHlwZRINCgV3aWR0aBgEIAEoDRIOCgZo",
            "ZWlnaHQYBSABKA0SMgoKaW50cmluc2ljcxgGIAEoCzIeLmNvbS5iY29tLnNv",
            "bGFyLmdwcmMuTWF0cml4M3gzEjkKCmRpc3RvcnRpb24YByABKAsyJS5jb20u",
            "YmNvbS5zb2xhci5ncHJjLkNhbWVyYURpc3RvcnRpb24iUwoQQ2FtZXJhRGlz",
            "dG9ydGlvbhILCgNLXzEYASABKAISCwoDS18yGAIgASgCEgsKA1BfMRgDIAEo",
            "AhILCgNQXzIYBCABKAISCwoDS18zGAUgASgCIpwBChRSZWxvY2FsaXphdGlv",
            "blJlc3VsdBJCCgtwb3NlX3N0YXR1cxgBIAEoDjItLmNvbS5iY29tLnNvbGFy",
            "LmdwcmMuUmVsb2NhbGl6YXRpb25Qb3NlU3RhdHVzEiwKBHBvc2UYAiABKAsy",
            "Hi5jb20uYmNvbS5zb2xhci5ncHJjLk1hdHJpeDR4NBISCgpjb25maWRlbmNl",
            "GAMgASgCIqcBCgVJbWFnZRINCgV3aWR0aBgBIAEoDRIOCgZoZWlnaHQYAiAB",
            "KA0SDAoEZGF0YRgDIAEoDBIwCgZsYXlvdXQYBCABKA4yIC5jb20uYmNvbS5z",
            "b2xhci5ncHJjLkltYWdlTGF5b3V0Ej8KEGltYWdlQ29tcHJlc3Npb24YBSAB",
            "KA4yJS5jb20uYmNvbS5zb2xhci5ncHJjLkltYWdlQ29tcHJlc3Npb24ihgEK",
            "BUZyYW1lEhEKCXNlbnNvcl9pZBgBIAEoBRIpCgVpbWFnZRgCIAEoCzIaLmNv",
            "bS5iY29tLnNvbGFyLmdwcmMuSW1hZ2USEQoJdGltZXN0YW1wGAMgASgEEiwK",
            "BHBvc2UYBCABKAsyHi5jb20uYmNvbS5zb2xhci5ncHJjLk1hdHJpeDR4NCLb",
            "AQoJTWF0cml4NHg0EgsKA20xMRgBIAEoAhILCgNtMTIYAiABKAISCwoDbTEz",
            "GAMgASgCEgsKA20xNBgEIAEoAhILCgNtMjEYBSABKAISCwoDbTIyGAYgASgC",
            "EgsKA20yMxgHIAEoAhILCgNtMjQYCCABKAISCwoDbTMxGAkgASgCEgsKA20z",
            "MhgKIAEoAhILCgNtMzMYCyABKAISCwoDbTM0GAwgASgCEgsKA200MRgNIAEo",
            "AhILCgNtNDIYDiABKAISCwoDbTQzGA8gASgCEgsKA200NBgQIAEoAiKAAQoJ",
            "TWF0cml4M3gzEgsKA20xMRgBIAEoAhILCgNtMTIYAiABKAISCwoDbTEzGAMg",
            "ASgCEgsKA20yMRgEIAEoAhILCgNtMjIYBSABKAISCwoDbTIzGAYgASgCEgsK",
            "A20zMRgHIAEoAhILCgNtMzIYCCABKAISCwoDbTMzGAkgASgCKh8KCkNhbWVy",
            "YVR5cGUSBwoDUkdCEAASCAoER1JBWRABKkYKGFJlbG9jYWxpemF0aW9uUG9z",
            "ZVN0YXR1cxILCgdOT19QT1NFEAASDAoITkVXX1BPU0UQARIPCgtMQVRFU1Rf",
            "UE9TRRACKjIKC0ltYWdlTGF5b3V0EgoKBlJHQl8yNBAAEgoKBkdSRVlfOBAB",
            "EgsKB0dSRVlfMTYQAiolChBJbWFnZUNvbXByZXNzaW9uEggKBE5PTkUQABIH",
            "CgNQTkcQATK8BAoiU29sQVJNYXBwaW5nQW5kUmVsb2NhbGl6YXRpb25Qcm94",
            "eRI+CgRJbml0EhouY29tLmJjb20uc29sYXIuZ3ByYy5FbXB0eRoaLmNvbS5i",
            "Y29tLnNvbGFyLmdwcmMuRW1wdHkSPwoFU3RhcnQSGi5jb20uYmNvbS5zb2xh",
            "ci5ncHJjLkVtcHR5GhouY29tLmJjb20uc29sYXIuZ3ByYy5FbXB0eRI+CgRT",
            "dG9wEhouY29tLmJjb20uc29sYXIuZ3ByYy5FbXB0eRoaLmNvbS5iY29tLnNv",
            "bGFyLmdwcmMuRW1wdHkSWAoTU2V0Q2FtZXJhUGFyYW1ldGVycxIlLmNvbS5i",
            "Y29tLnNvbGFyLmdwcmMuQ2FtZXJhUGFyYW1ldGVycxoaLmNvbS5iY29tLnNv",
            "bGFyLmdwcmMuRW1wdHkSWQoQUmVsb2NhbGl6ZUFuZE1hcBIaLmNvbS5iY29t",
            "LnNvbGFyLmdwcmMuRnJhbWUaKS5jb20uYmNvbS5zb2xhci5ncHJjLlJlbG9j",
            "YWxpemF0aW9uUmVzdWx0ElcKDkdldDNEVHJhbnNmb3JtEhouY29tLmJjb20u",
            "c29sYXIuZ3ByYy5FbXB0eRopLmNvbS5iY29tLnNvbGFyLmdwcmMuUmVsb2Nh",
            "bGl6YXRpb25SZXN1bHQSRwoLU2VuZE1lc3NhZ2USHC5jb20uYmNvbS5zb2xh",
            "ci5ncHJjLk1lc3NhZ2UaGi5jb20uYmNvbS5zb2xhci5ncHJjLkVtcHR5YgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Bcom.Solar.Gprc.CameraType), typeof(global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus), typeof(global::Com.Bcom.Solar.Gprc.ImageLayout), typeof(global::Com.Bcom.Solar.Gprc.ImageCompression), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Empty), global::Com.Bcom.Solar.Gprc.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Message), global::Com.Bcom.Solar.Gprc.Message.Parser, new[]{ "Message_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.CameraParameters), global::Com.Bcom.Solar.Gprc.CameraParameters.Parser, new[]{ "Name", "Id", "CameraType", "Width", "Height", "Intrinsics", "Distortion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.CameraDistortion), global::Com.Bcom.Solar.Gprc.CameraDistortion.Parser, new[]{ "K1", "K2", "P1", "P2", "K3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.RelocalizationResult), global::Com.Bcom.Solar.Gprc.RelocalizationResult.Parser, new[]{ "PoseStatus", "Pose", "Confidence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Image), global::Com.Bcom.Solar.Gprc.Image.Parser, new[]{ "Width", "Height", "Data", "Layout", "ImageCompression" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Frame), global::Com.Bcom.Solar.Gprc.Frame.Parser, new[]{ "SensorId", "Image", "Timestamp", "Pose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Matrix4x4), global::Com.Bcom.Solar.Gprc.Matrix4x4.Parser, new[]{ "M11", "M12", "M13", "M14", "M21", "M22", "M23", "M24", "M31", "M32", "M33", "M34", "M41", "M42", "M43", "M44" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Bcom.Solar.Gprc.Matrix3x3), global::Com.Bcom.Solar.Gprc.Matrix3x3.Parser, new[]{ "M11", "M12", "M13", "M21", "M22", "M23", "M31", "M32", "M33" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CameraType {
    [pbr::OriginalName("RGB")] Rgb = 0,
    [pbr::OriginalName("GRAY")] Gray = 1,
  }

  public enum RelocalizationPoseStatus {
    [pbr::OriginalName("NO_POSE")] NoPose = 0,
    [pbr::OriginalName("NEW_POSE")] NewPose = 1,
    [pbr::OriginalName("LATEST_POSE")] LatestPose = 2,
  }

  public enum ImageLayout {
    [pbr::OriginalName("RGB_24")] Rgb24 = 0,
    [pbr::OriginalName("GREY_8")] Grey8 = 1,
    [pbr::OriginalName("GREY_16")] Grey16 = 2,
  }

  public enum ImageCompression {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("PNG")] Png = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int Message_FieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message_ {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message_ != other.Message_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message_.Length != 0) hash ^= Message_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Message_.Length != 0) {
        Message_ = other.Message_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message_ = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message_ = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CameraParameters : pb::IMessage<CameraParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraParameters> _parser = new pb::MessageParser<CameraParameters>(() => new CameraParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters(CameraParameters other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      cameraType_ = other.cameraType_;
      width_ = other.width_;
      height_ = other.height_;
      intrinsics_ = other.intrinsics_ != null ? other.intrinsics_.Clone() : null;
      distortion_ = other.distortion_ != null ? other.distortion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraParameters Clone() {
      return new CameraParameters(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "camera_type" field.</summary>
    public const int CameraTypeFieldNumber = 3;
    private global::Com.Bcom.Solar.Gprc.CameraType cameraType_ = global::Com.Bcom.Solar.Gprc.CameraType.Rgb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraType CameraType {
      get { return cameraType_; }
      set {
        cameraType_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "intrinsics" field.</summary>
    public const int IntrinsicsFieldNumber = 6;
    private global::Com.Bcom.Solar.Gprc.Matrix3x3 intrinsics_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix3x3 Intrinsics {
      get { return intrinsics_; }
      set {
        intrinsics_ = value;
      }
    }

    /// <summary>Field number for the "distortion" field.</summary>
    public const int DistortionFieldNumber = 7;
    private global::Com.Bcom.Solar.Gprc.CameraDistortion distortion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.CameraDistortion Distortion {
      get { return distortion_; }
      set {
        distortion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (CameraType != other.CameraType) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (!object.Equals(Intrinsics, other.Intrinsics)) return false;
      if (!object.Equals(Distortion, other.Distortion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) hash ^= CameraType.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (intrinsics_ != null) hash ^= Intrinsics.GetHashCode();
      if (distortion_ != null) hash ^= Distortion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CameraType);
      }
      if (Width != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (intrinsics_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Intrinsics);
      }
      if (distortion_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Distortion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CameraType);
      }
      if (Width != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Height);
      }
      if (intrinsics_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Intrinsics);
      }
      if (distortion_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Distortion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CameraType);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (intrinsics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intrinsics);
      }
      if (distortion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distortion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraParameters other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CameraType != global::Com.Bcom.Solar.Gprc.CameraType.Rgb) {
        CameraType = other.CameraType;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.intrinsics_ != null) {
        if (intrinsics_ == null) {
          Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
        }
        Intrinsics.MergeFrom(other.Intrinsics);
      }
      if (other.distortion_ != null) {
        if (distortion_ == null) {
          Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
        }
        Distortion.MergeFrom(other.Distortion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            CameraType = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
          case 50: {
            if (intrinsics_ == null) {
              Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics);
            break;
          }
          case 58: {
            if (distortion_ == null) {
              Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            CameraType = (global::Com.Bcom.Solar.Gprc.CameraType) input.ReadEnum();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 40: {
            Height = input.ReadUInt32();
            break;
          }
          case 50: {
            if (intrinsics_ == null) {
              Intrinsics = new global::Com.Bcom.Solar.Gprc.Matrix3x3();
            }
            input.ReadMessage(Intrinsics);
            break;
          }
          case 58: {
            if (distortion_ == null) {
              Distortion = new global::Com.Bcom.Solar.Gprc.CameraDistortion();
            }
            input.ReadMessage(Distortion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CameraDistortion : pb::IMessage<CameraDistortion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraDistortion> _parser = new pb::MessageParser<CameraDistortion>(() => new CameraDistortion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraDistortion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion(CameraDistortion other) : this() {
      k1_ = other.k1_;
      k2_ = other.k2_;
      p1_ = other.p1_;
      p2_ = other.p2_;
      k3_ = other.k3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraDistortion Clone() {
      return new CameraDistortion(this);
    }

    /// <summary>Field number for the "K_1" field.</summary>
    public const int K1FieldNumber = 1;
    private float k1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K1 {
      get { return k1_; }
      set {
        k1_ = value;
      }
    }

    /// <summary>Field number for the "K_2" field.</summary>
    public const int K2FieldNumber = 2;
    private float k2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K2 {
      get { return k2_; }
      set {
        k2_ = value;
      }
    }

    /// <summary>Field number for the "P_1" field.</summary>
    public const int P1FieldNumber = 3;
    private float p1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float P1 {
      get { return p1_; }
      set {
        p1_ = value;
      }
    }

    /// <summary>Field number for the "P_2" field.</summary>
    public const int P2FieldNumber = 4;
    private float p2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float P2 {
      get { return p2_; }
      set {
        p2_ = value;
      }
    }

    /// <summary>Field number for the "K_3" field.</summary>
    public const int K3FieldNumber = 5;
    private float k3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float K3 {
      get { return k3_; }
      set {
        k3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraDistortion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraDistortion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K1, other.K1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K2, other.K2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(P1, other.P1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(P2, other.P2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(K3, other.K3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (K1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K1);
      if (K2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K2);
      if (P1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(P1);
      if (P2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(P2);
      if (K3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(K3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (K1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(K1);
      }
      if (K2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(K2);
      }
      if (P1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(P1);
      }
      if (P2 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(P2);
      }
      if (K3 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(K3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (K1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(K1);
      }
      if (K2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(K2);
      }
      if (P1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(P1);
      }
      if (P2 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(P2);
      }
      if (K3 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(K3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (K1 != 0F) {
        size += 1 + 4;
      }
      if (K2 != 0F) {
        size += 1 + 4;
      }
      if (P1 != 0F) {
        size += 1 + 4;
      }
      if (P2 != 0F) {
        size += 1 + 4;
      }
      if (K3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraDistortion other) {
      if (other == null) {
        return;
      }
      if (other.K1 != 0F) {
        K1 = other.K1;
      }
      if (other.K2 != 0F) {
        K2 = other.K2;
      }
      if (other.P1 != 0F) {
        P1 = other.P1;
      }
      if (other.P2 != 0F) {
        P2 = other.P2;
      }
      if (other.K3 != 0F) {
        K3 = other.K3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            K1 = input.ReadFloat();
            break;
          }
          case 21: {
            K2 = input.ReadFloat();
            break;
          }
          case 29: {
            P1 = input.ReadFloat();
            break;
          }
          case 37: {
            P2 = input.ReadFloat();
            break;
          }
          case 45: {
            K3 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            K1 = input.ReadFloat();
            break;
          }
          case 21: {
            K2 = input.ReadFloat();
            break;
          }
          case 29: {
            P1 = input.ReadFloat();
            break;
          }
          case 37: {
            P2 = input.ReadFloat();
            break;
          }
          case 45: {
            K3 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RelocalizationResult : pb::IMessage<RelocalizationResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelocalizationResult> _parser = new pb::MessageParser<RelocalizationResult>(() => new RelocalizationResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelocalizationResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult(RelocalizationResult other) : this() {
      poseStatus_ = other.poseStatus_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      confidence_ = other.confidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelocalizationResult Clone() {
      return new RelocalizationResult(this);
    }

    /// <summary>Field number for the "pose_status" field.</summary>
    public const int PoseStatusFieldNumber = 1;
    private global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus poseStatus_ = global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus PoseStatus {
      get { return poseStatus_; }
      set {
        poseStatus_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Matrix4x4 pose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix4x4 Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 3;
    private float confidence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelocalizationResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelocalizationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoseStatus != other.PoseStatus) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) hash ^= PoseStatus.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PoseStatus);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PoseStatus);
      }
      if (pose_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pose);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PoseStatus);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelocalizationResult other) {
      if (other == null) {
        return;
      }
      if (other.PoseStatus != global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus.NoPose) {
        PoseStatus = other.PoseStatus;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PoseStatus = (global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PoseStatus = (global::Com.Bcom.Solar.Gprc.RelocalizationPoseStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Image : pb::IMessage<Image>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      data_ = other.data_;
      layout_ = other.layout_;
      imageCompression_ = other.imageCompression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.ImageLayout layout_ = global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.ImageLayout Layout {
      get { return layout_; }
      set {
        layout_ = value;
      }
    }

    /// <summary>Field number for the "imageCompression" field.</summary>
    public const int ImageCompressionFieldNumber = 5;
    private global::Com.Bcom.Solar.Gprc.ImageCompression imageCompression_ = global::Com.Bcom.Solar.Gprc.ImageCompression.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.ImageCompression ImageCompression {
      get { return imageCompression_; }
      set {
        imageCompression_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Data != other.Data) return false;
      if (Layout != other.Layout) return false;
      if (ImageCompression != other.ImageCompression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) hash ^= Layout.GetHashCode();
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) hash ^= ImageCompression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageCompression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ImageCompression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layout);
      }
      if (ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImageCompression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Layout != global::Com.Bcom.Solar.Gprc.ImageLayout.Rgb24) {
        Layout = other.Layout;
      }
      if (other.ImageCompression != global::Com.Bcom.Solar.Gprc.ImageCompression.None) {
        ImageCompression = other.ImageCompression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 32: {
            Layout = (global::Com.Bcom.Solar.Gprc.ImageLayout) input.ReadEnum();
            break;
          }
          case 40: {
            ImageCompression = (global::Com.Bcom.Solar.Gprc.ImageCompression) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 32: {
            Layout = (global::Com.Bcom.Solar.Gprc.ImageLayout) input.ReadEnum();
            break;
          }
          case 40: {
            ImageCompression = (global::Com.Bcom.Solar.Gprc.ImageCompression) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Frame : pb::IMessage<Frame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame(Frame other) : this() {
      sensorId_ = other.sensorId_;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      timestamp_ = other.timestamp_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame Clone() {
      return new Frame(this);
    }

    /// <summary>Field number for the "sensor_id" field.</summary>
    public const int SensorIdFieldNumber = 1;
    private int sensorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SensorId {
      get { return sensorId_; }
      set {
        sensorId_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private global::Com.Bcom.Solar.Gprc.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 4;
    private global::Com.Bcom.Solar.Gprc.Matrix4x4 pose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Bcom.Solar.Gprc.Matrix4x4 Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SensorId != other.SensorId) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SensorId != 0) hash ^= SensorId.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SensorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SensorId);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (pose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SensorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SensorId);
      }
      if (image_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (pose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SensorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SensorId);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frame other) {
      if (other == null) {
        return;
      }
      if (other.SensorId != 0) {
        SensorId = other.SensorId;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Com.Bcom.Solar.Gprc.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
        }
        Pose.MergeFrom(other.Pose);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SensorId = input.ReadInt32();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::Com.Bcom.Solar.Gprc.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SensorId = input.ReadInt32();
            break;
          }
          case 18: {
            if (image_ == null) {
              Image = new global::Com.Bcom.Solar.Gprc.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            if (pose_ == null) {
              Pose = new global::Com.Bcom.Solar.Gprc.Matrix4x4();
            }
            input.ReadMessage(Pose);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix4x4 : pb::IMessage<Matrix4x4>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix4x4> _parser = new pb::MessageParser<Matrix4x4>(() => new Matrix4x4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix4x4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4(Matrix4x4 other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m14_ = other.m14_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m24_ = other.m24_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      m34_ = other.m34_;
      m41_ = other.m41_;
      m42_ = other.m42_;
      m43_ = other.m43_;
      m44_ = other.m44_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4 Clone() {
      return new Matrix4x4(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m14" field.</summary>
    public const int M14FieldNumber = 4;
    private float m14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M14 {
      get { return m14_; }
      set {
        m14_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 5;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 6;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 7;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m24" field.</summary>
    public const int M24FieldNumber = 8;
    private float m24_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M24 {
      get { return m24_; }
      set {
        m24_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 9;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 10;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 11;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    /// <summary>Field number for the "m34" field.</summary>
    public const int M34FieldNumber = 12;
    private float m34_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M34 {
      get { return m34_; }
      set {
        m34_ = value;
      }
    }

    /// <summary>Field number for the "m41" field.</summary>
    public const int M41FieldNumber = 13;
    private float m41_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M41 {
      get { return m41_; }
      set {
        m41_ = value;
      }
    }

    /// <summary>Field number for the "m42" field.</summary>
    public const int M42FieldNumber = 14;
    private float m42_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M42 {
      get { return m42_; }
      set {
        m42_ = value;
      }
    }

    /// <summary>Field number for the "m43" field.</summary>
    public const int M43FieldNumber = 15;
    private float m43_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M43 {
      get { return m43_; }
      set {
        m43_ = value;
      }
    }

    /// <summary>Field number for the "m44" field.</summary>
    public const int M44FieldNumber = 16;
    private float m44_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M44 {
      get { return m44_; }
      set {
        m44_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix4x4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix4x4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M14, other.M14)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M24, other.M24)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M34, other.M34)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M41, other.M41)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M42, other.M42)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M43, other.M43)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M44, other.M44)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M14 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M14);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M24 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M24);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (M34 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M34);
      if (M41 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M41);
      if (M42 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M42);
      if (M43 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M43);
      if (M44 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M44);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (M41 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(M41);
      }
      if (M42 != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(M42);
      }
      if (M43 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(M43);
      }
      if (M44 != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(M44);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (M41 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(M41);
      }
      if (M42 != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(M42);
      }
      if (M43 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(M43);
      }
      if (M44 != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(M44);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M14 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M24 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (M34 != 0F) {
        size += 1 + 4;
      }
      if (M41 != 0F) {
        size += 1 + 4;
      }
      if (M42 != 0F) {
        size += 1 + 4;
      }
      if (M43 != 0F) {
        size += 1 + 4;
      }
      if (M44 != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix4x4 other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M14 != 0F) {
        M14 = other.M14;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M24 != 0F) {
        M24 = other.M24;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      if (other.M34 != 0F) {
        M34 = other.M34;
      }
      if (other.M41 != 0F) {
        M41 = other.M41;
      }
      if (other.M42 != 0F) {
        M42 = other.M42;
      }
      if (other.M43 != 0F) {
        M43 = other.M43;
      }
      if (other.M44 != 0F) {
        M44 = other.M44;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
          case 109: {
            M41 = input.ReadFloat();
            break;
          }
          case 117: {
            M42 = input.ReadFloat();
            break;
          }
          case 125: {
            M43 = input.ReadFloat();
            break;
          }
          case 133: {
            M44 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
          case 109: {
            M41 = input.ReadFloat();
            break;
          }
          case 117: {
            M42 = input.ReadFloat();
            break;
          }
          case 125: {
            M43 = input.ReadFloat();
            break;
          }
          case 133: {
            M44 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix3x3 : pb::IMessage<Matrix3x3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix3x3> _parser = new pb::MessageParser<Matrix3x3>(() => new Matrix3x3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix3x3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Bcom.Solar.Gprc.SolarMappingAndRelocalizationProxyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3(Matrix3x3 other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix3x3 Clone() {
      return new Matrix3x3(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 4;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 5;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 6;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 7;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 8;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 9;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix3x3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix3x3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M21 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M23);
      }
      if (M31 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M33);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M21 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M23);
      }
      if (M31 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M33);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix3x3 other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M21 = input.ReadFloat();
            break;
          }
          case 45: {
            M22 = input.ReadFloat();
            break;
          }
          case 53: {
            M23 = input.ReadFloat();
            break;
          }
          case 61: {
            M31 = input.ReadFloat();
            break;
          }
          case 69: {
            M32 = input.ReadFloat();
            break;
          }
          case 77: {
            M33 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M21 = input.ReadFloat();
            break;
          }
          case 45: {
            M22 = input.ReadFloat();
            break;
          }
          case 53: {
            M23 = input.ReadFloat();
            break;
          }
          case 61: {
            M31 = input.ReadFloat();
            break;
          }
          case 69: {
            M32 = input.ReadFloat();
            break;
          }
          case 77: {
            M33 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
